name: Deploy to AWS EC2 using Docker

on:
  push:
    branches:
      - main # Trigger this workflow on pushes to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t my-nestjs-app .

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to Amazon ECR
        run: |
          # Authenticate with AWS ECR
          $(aws ecr get-login --no-include-email --region ${{ secrets.AWS_REGION }})
          # Tag the image with the ECR repository
          docker tag my-nestjs-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-nestjs-repo:latest
          # Push the image to ECR
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-nestjs-repo:latest

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_SSH_KEY }} ubuntu@${{ secrets.AWS_EC2_PUBLIC_IP }} << EOF
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-nestjs-repo:latest
            docker stop my-nestjs-container || true
            docker rm my-nestjs-container || true
            docker run -d --name my-nestjs-container -p 80:3000 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-nestjs-repo:latest
          EOF
